@layout BlogPostLayout
@page "/port/{LocationId}/{PortId:int}"
@using Data;
@inject BlazePortContext dbContext

<SpaLoader IsLoading="@(port == null)">
    <LoadingTemplate>
        <span>Loading...</span>
    </LoadingTemplate>
    <ContentTemplate>
        <TitleBlock Title="@port.Name" BackgroundUrl="@port.ImageUrl" />
        <div class="container no-bg pt-5">
            <div class="row">
                <div class="col-md-8">
                    <h2>About @port.Name</h2>
                    <p>@port.Description</p>
                </div>
                <div class="col-md-4">
                    <h3>Location</h3>
                    <div class="list-group">
                        <a href="/destination/@port.LocationId" class="list-group-item list-group-item-action">
                            <TelerikIcon Icon="@IconName.MarkerPin" />
                            @port.Location.Name, @port.Country
                        </a>
                        <span class="list-group-item">
                            <TelerikIcon Icon="@IconName.MarkerPinTarget" />
                            <span>@port.Lat, @port.Long</span>
                        </span>
                    </div>
                    <ol>
                    </ol>
                </div>
            </div>
        </div>
    </ContentTemplate>
</SpaLoader>

@code {

    [Parameter] public string LocationId { get; set; }
    [Parameter] public int PortId { get; set; }

    PortDetails port;

    protected override async Task OnInitializedAsync()
    {
        var locationDetails = await dbContext.Locations.FirstAsync(l => l.Id == Guid.Parse(LocationId));
        port = locationDetails.Ports.First(p => p.Id == PortId);
    }

}
