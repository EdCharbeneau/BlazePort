@page "/port/{LocationId}/{PortId:int}"
@using Data;
@inject BlazePortContext dbContext

<section class="content">
    @if (!IsLoading)
    {
        <article class="destination-details">
            <TitleBlock Title="@port.Name" BackgroundUrl="@port.ImageUrl" />
            <div>
                <h2>About @port.Name</h2>
                <p>@port.Description</p>
            </div>
            <aside>

                <h3>Location</h3>
                <h4>
                    <TelerikIcon Icon="marker-pin-target" />
                    <span>@port.Lat, @port.Long</span>
                </h4>
                <ul class="list-group">
                    <li>
                        <a href="/destination/@port.LocationId" class="list-group-item list-group-item-action">
                            <TelerikIcon Icon="marker-pin" />
                            @port.Location.Name, @port.Country
                        </a>
                    </li>
                </ul>
            </aside>
        </article>
    }
</section>

<TelerikLoaderContainer Visible="IsLoading"></TelerikLoaderContainer>

@code {

    bool IsLoading => port == null;

    [Parameter] public string LocationId { get; set; }
    [Parameter] public int PortId { get; set; }

    PortDetails port;

    protected override async Task OnInitializedAsync()
    {
        var locationDetails = await dbContext.Locations.FirstAsync(l => l.Id == Guid.Parse(LocationId));
        port = locationDetails.Ports.First(p => p.Id == PortId);
    }

}
