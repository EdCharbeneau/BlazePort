@implements IDisposable
@using BlazorSize
@inject ResizeListener ResizeListener

<div class="fly-out-panel">
    <TelerikAnimationContainer AnimationType="AnimationType.SlideRight" @ref="Panel"
                               ParentInlineStyle="@HotFixStyle"
                               Top="0" Left="0" Height="100vh" Width="@Width">
        <div class="k-window-titlebar k-dialog-titlebar k-header">
            <div class="k-window-title k-dialog-title">
                @TitleTemplate
            </div>
            <TelerikButton Icon="close" OnClick="HideAsync"></TelerikButton>
        </div>
        <div class="k-content k-window-content k-dialog-content">
            @ContentTemplate
        </div>
    </TelerikAnimationContainer>
</div>

@code {

    bool IsMediumUpMedia;

    protected string Width => IsMediumUpMedia ? "50%" : "100%";

    TelerikAnimationContainer Panel { get; set; }

    [Parameter] public RenderFragment TitleTemplate { get; set; }

    [Parameter] public RenderFragment ContentTemplate { get; set; }

    string HotFixStyle = "pointer-events: none;";

    public async Task HideAsync()
    {
        await Panel.HideAsync();
        HotFixStyle = "pointer-events: none;";
    }

    public async Task ShowAsync()
    {
        await Panel.ShowAsync();
        HotFixStyle = "";
    }

    protected override void OnAfterRender(bool firstRender)
    {
        if (firstRender)
        {
            ResizeListener.OnResized += WindowResized;
        }
    }

    void IDisposable.Dispose()
    {
        ResizeListener.OnResized -= WindowResized;
    }

    async void WindowResized(object _, BrowserWindowSize window)
    {
        IsMediumUpMedia = await ResizeListener.MatchMedia(Breakpoints.MediumUp);
        StateHasChanged();
        
        //https://github.com/telerik/blazor/issues/630
        // Define drop down widths after bug fixed
        //TripConfiguration.DropDownWidth = IsMediumUpMedia ? "calc(50% - 48px)" : "calc(100% - 48px)";

    }

}
